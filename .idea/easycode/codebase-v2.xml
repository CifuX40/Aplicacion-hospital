<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/mardeluna/ExampleInstrumentedTest.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/ui/theme/Color.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/ui/theme/Theme.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/ui/theme/Type.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Aspiracion.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Carina.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/FirstFloorScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/HistoryScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/HospitalizationScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/MainActivity.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/MainLogoScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Navegation.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/PatientAspirationScrenn.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Quirofano.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Respirador.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/RoomScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/SecondFloorScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/StartScreen.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Toma_oxigeno.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/com/example/mardeluna/Uci.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/java/modelo/ClaseConexion.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/layout/activitymain.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/mipmap-anydpi/ic_launcher.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/mipmap-anydpi/ic_launcher_round.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/values/colors.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/values/strings.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/values/themes.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/xml/backup_rules.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/res/xml/data_extraction_rules.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/main/AndroidManifest.xml;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/src/test/java/com/example/mardeluna/ExampleUnitTest.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/build.gradle.kts;C:/Users/carlo/AndroidStudioProjects/MardeLuna/app/Prueba.kt;C:/Users/carlo/AndroidStudioProjects/MardeLuna/build.gradle.kts;C:/Users/carlo/AndroidStudioProjects/MardeLuna/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/carlo/AndroidStudioProjects/MardeLuna&quot;:&quot;{\&quot;/app/src/main/java/com/example/mardeluna/view/Hospital_de_dia.kt\&quot;:\&quot;This file contains a single Composable function and a helper function. Here\\u0027s the summary:\\n\\n`HospitalDeDia`: A Composable function that displays a screen with information about the Hospital de Día, including an image, a description, and navigation buttons to other screens.\\n\\n`loadImageFromFirebase`: A helper function that loads an image from Firebase Storage and calls a callback function with the URL or an error.\\n\\nThe file is responsible for displaying a screen with information about the Hospital de Día, including loading images from Firebase Storage and providing navigation to other screens.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Procedimiento_ingresos.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ProcedimientoIngresos`: This function creates a screen that displays a background image and an image of a procedure, both loaded from Firebase Storage. It also includes a top app bar with a navigation icon to go back to the \\\&quot;Plantas\\\&quot; screen.\\n\\nThe file is responsible for rendering a screen that displays information about a procedure, with the necessary data being fetched from Firebase Storage.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Esterilizacion.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Esterilizacion`: This function is a Composable function that displays a screen with information about sterilization, including a background image, an image of sterilization, and text explaining the different types of materials and sterilization processes. It also includes buttons to navigate to the \\\&quot;Empaquetado\\\&quot; and \\\&quot;Controles carga\\\&quot; screens.\\n\\nThe file appears to be a part of an Android app that provides information and navigation related to the sterilization process.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Admin.kt\&quot;:\&quot;This file contains the implementation of an admin screen for a mobile application. It includes the following classes and functions:\\n\\n`User`: A data class representing a user with properties for DNI, name, last name, and email.\\n\\n`Admin`: A composable function that represents the admin screen, handling user management operations and displaying a list of users.\\n\\n`AdminContent`: A composable function that defines the UI and interactions for the admin screen.\\n\\n`validateFields`: A function that checks if all the provided fields are not blank.\\n\\n`loadBackgroundImage`: A function that loads a background image from Firebase Storage and calls the provided callback with the image URL.\\n\\n`getAllUsers`: A function that retrieves all the users from Firestore and calls the provided callback with the list of users.\\n\\n`createUser`: A function that creates a new user in Firebase Authentication and adds the user\\u0027s information to Firestore.\\n\\n`deleteUser`: A function that deletes a user from Firestore based on the provided DNI and email.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Historia.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Historia`: This function creates a composable that displays the history of the Mar de Luna Hospital, including its background, mission, and environmental commitment, with a background image loaded from Firebase Storage.\\n\\nThe file appears to be a Jetpack Compose screen that displays the history and information about the Mar de Luna Hospital. It loads a background image from Firebase Storage and displays the hospital\\u0027s history, mission, and environmental initiatives in a scrollable column.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Hoja_informativa_pacientes.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`HojaInformativaPacientes`: This function displays a screen with a background image and an image of an informative sheet for patients, both loaded from Firebase Storage.\\n\\nThe file also includes imports for various Jetpack Compose and Firebase Storage classes and functions, which are used within the `HojaInformativaPacientes` function.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Publicacion.kt\&quot;:\&quot;This file contains Composable functions for a social media-like application built using Android Jetpack Compose.\\n\\n`Publicaciones`: A composable function that displays a list of user posts, allows deleting posts, and provides a button to add a new post.\\n\\n`PublicacionItem`: A composable function that displays a single post item, including the author, message, and optional image.\\n\\n`AgregarPublicacionUI`: A composable function that provides a UI for adding a new post, including a text input field and a publish button.\\n\\n`cargarFondo`: A function that loads a background image from Firebase Storage and calls a provided callback with the URL.\\n\\n`cargarPublicaciones`: A function that retrieves a list of posts from Firestore and calls a provided callback with the data.\\n\\n`eliminarPublicacion`: A function that deletes a post from Firestore based on the provided post ID.\\n\\n`publicarPublicacion`: A function that publishes a new post to Firestore with the provided message.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_paradas.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CarroParadas`: This function creates a screen that displays images and information related to a \\\&quot;Carro de paradas\\\&quot; (a type of vehicle) using data loaded from Firebase Storage.\\n\\nThe file does not contain any classes, but it does the following:\\n\\n1. Defines variables to store the URLs of the images and track any errors that occur during the image loading process.\\n2. Loads the images from Firebase Storage using `LaunchedEffect` and updates the state variables accordingly.\\n3. Renders the screen using a `Scaffold` with a `TopAppBar` and a `Column` that displays the images and text content.\\n4. Handles different states for the image loading process, such as displaying a loading message or an error message if the images fail to load.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Evita_600.kt\&quot;:\&quot;This file contains a single Composable function called `Evita600` that displays a screen with information about the \\\&quot;Evita 600\\\&quot; product. The function fetches the background image and the \\\&quot;Evita 600\\\&quot; image from Firebase Storage, and then displays them along with the product information.\\n\\n`Evita600`: A Composable function that displays a screen with information about the \\\&quot;Evita 600\\\&quot; product, including a background image, the \\\&quot;Evita 600\\\&quot; image, and detailed product information.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Residuos_hospitalarios.kt\&quot;:\&quot;This file contains a Composable function called `ResiduosHospitalarios` that displays a screen with a background image and a video related to hospital waste. The function loads the background image and video from Firebase Storage and displays them on the screen.\\n\\n`ResiduosHospitalarios`: A Composable function that displays a screen with a background image and a video related to hospital waste.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/controller/CredentialsManager.kt\&quot;:\&quot;This file contains a single class, `CredentialsManager`, which is responsible for managing user credentials using Android\\u0027s SharedPreferences.\\n\\n`CredentialsManager`: A class that provides methods to save, retrieve, and clear user credentials stored in the device\\u0027s SharedPreferences.\\n\\n`saveUser(email: String, password: String)`: Saves the provided email and password to the SharedPreferences.\\n\\n`getAllUsers(): Map\\u003cString, String\\u003e`: Retrieves a map of all the saved user emails and their corresponding passwords from the SharedPreferences.\\n\\n`clearUser(email: String)`: Removes the saved credentials for the specified email from the SharedPreferences.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Iniciar_sesion.kt\&quot;:\&quot;This file contains a single Composable function `IniciarSesion` that represents the login screen for a hospital application built using Jetpack Compose.\\n\\n`IniciarSesion`: This function creates the login screen, which includes input fields for email and password, a login button, and functionality to remember and autofill previously used accounts.\\n\\nThe file also includes the following functions:\\n\\n`loginUser`: Handles the login process, including saving the user\\u0027s email and password in SharedPreferences.\\n`autofillFields`: Automatically fills the email and password fields with a previously saved account.\\n`removeEmail`: Removes a previously saved account from the list of remembered accounts.\\n\\nOverall, this file provides the implementation for the login screen of the hospital application, including the ability to remember and autofill user accounts.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/model/Navegacion.kt\&quot;:\&quot;This file defines the navigation structure for a mobile application using Jetpack Compose. It sets up the navigation graph and maps each destination to its corresponding composable function.\\n\\n`Navegacion`: This function sets up the navigation graph and defines the destinations for the application.\\n\\n`AgregarPublicacionUI`: Composable function for the \\\&quot;Add Publication\\\&quot; screen.\\n`Admin`: Composable function for the \\\&quot;Admin\\\&quot; screen.\\n`Aspiracion`: Composable function for the \\\&quot;Aspiration\\\&quot; screen.\\n`CarroIngresos`: Composable function for the \\\&quot;Admission Cart\\\&quot; screen.\\n`CarroParadas`: Composable function for the \\\&quot;Stops Cart\\\&quot; screen.\\n`ChequeoRespirador`: Composable function for the \\\&quot;Respirator Check\\\&quot; screen.\\n`ControlesCarga`: Composable function for the \\\&quot;Load Controls\\\&quot; screen.\\n`ControlEnfermeria`: Composable function for the \\\&quot;Nursing Control\\\&quot; screen.\\n`Desfibrilador`: Composable function for the \\\&quot;Defibrillator\\\&quot; screen.\\n`Empaquetado`: Composable function for the \\\&quot;Packaging\\\&quot; screen.\\n`Endoscopios`: Composable function for the \\\&quot;Endoscopes\\\&quot; screen.\\n`EquipoQuirofano`: Composable function for the \\\&quot;Operating Room Equipment\\\&quot; screen.\\n`Esterilizacion`: Composable function for the \\\&quot;Sterilization\\\&quot; screen.\\n`Evita600`: Composable function for the \\\&quot;Evita 600\\\&quot; screen.\\n`Habitacion`: Composable function for the \\\&quot;Room\\\&quot; screen.\\n`Historia`: Composable function for the \\\&quot;History\\\&quot; screen.\\n`HojaInformativaPacientes`: Composable function for the \\\&quot;Patient Information Sheet\\\&quot; screen.\\n`HospitalDeDia`: Composable function for the \\\&quot;Day Hospital\\\&quot; screen.\\n`Hospitalizacion`: Composable function for the \\\&quot;Hospitalization\\\&quot; screen.\\n`Lavado`: Composable function for the \\\&quot;Washing\\\&quot; screen.\\n`Plantas`: Composable function for the \\\&quot;Plants\\\&quot; screen.\\n`PaginasWeb`: Composable function for the \\\&quot;Web Pages\\\&quot; screen.\\n`PrimeraPlanta`: Composable function for the \\\&quot;First Floor\\\&quot; screen.\\n`ProcedimientoIngresos`: Composable function for the \\\&quot;Admission Procedure\\\&quot; screen.\\n`Publicaciones`: Composable function for the \\\&quot;Publications\\\&quot; screen.\\n`TomaConstantes`: Composable function for the \\\&quot;Vital Signs Measurement\\\&quot; screen.\\n`Quirofano`: Composable function for the \\\&quot;Operating Room\\\&quot; screen.\\n`RCP`: Composable function for the \\\&quot;CPR\\\&quot; screen.\\n`Rea`: Composable function for the \\\&quot;REA\\\&quot; screen.\\n`ResiduosHospitalarios`: Composable function for the \\\&quot;Hospital Waste\\\&quot; screen.\\n`SalaEndoscopias`: Composable function for the \\\&quot;Endoscopy Room\\\&quot; screen.\\n`SalaQuirofano`: Composable function for the \\\&quot;Operating Room\\\&quot; screen.\\n`Savina`: Composable function for the \\\&quot;Savina\\\&quot; screen.\\n`SegundaPlanta`: Composable function for the \\\&quot;Second Floor\\\&quot; screen.\\n`IniciarSesion`: Composable function for the \\\&quot;Login\\\&quot; screen.\\n`TomaOxigeno`: Composable function for the \\\&quot;Oxygen Intake\\\&quot; screen.\\n`Uci`: Composable function for the \\\&quot;ICU\\\&quot; screen.\\n`UciMedica`: Composable function for the \\\&quot;Medical ICU\\\&quot; screen.\\n`UciPostquirurgica`: Composable function for the \\\&quot;Post-Surgical ICU\\\&quot; screen.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Gradle configuration file that sets up the project\\u0027s dependency management and plugin management. The key elements are:\\n\\n`pluginManagement`: Specifies the repositories to be used for resolving Gradle plugins.\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies.\\n`rootProject.name`: Sets the name of the root project to \\\&quot;Mar de Luna\\\&quot;.\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_quirofano.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SalaQuirofano`: This function creates a screen that displays information about the operating room, including a background image, an image of the operating room, a description, and two buttons that navigate to other screens.\\n\\nThe file also includes code to load the background and operating room images from Firebase Storage, and uses various Jetpack Compose components to create the UI.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Primera_planta.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`PrimeraPlanta`: This function creates a screen that displays the first plant of the \\\&quot;Mar de Luna\\\&quot; application, including a background image, an image of the first plant, and buttons to navigate to different sections of the application.\\n\\nThe file also includes imports for various Jetpack Compose and Firebase Storage components, which are used within the `PrimeraPlanta` function.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_postquirurgica.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`UciPostquirurgica`: This function is a Composable function that displays the UI for the UCI Postquirurgica screen, including a background image, a top app bar, and content related to the UCI Postquirurgica.\\n\\nThe file is responsible for downloading the background image and the image of the UCI room from Firebase Storage, and then displaying the UI with the downloaded images and relevant content.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Quirofano.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Quirofano`: This function creates a composable UI screen that displays a background image, an image of a surgery room, and three buttons that navigate to different screens related to the surgery room.\\n\\nThe file appears to be a part of an Android application that uses Jetpack Compose for the UI and Firebase Storage to load the background and surgery room images.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Habitación.kt\&quot;:\&quot;This file contains a single Composable function called `Habitacion` that displays a screen with information about a hospital room, including a background image, a main image, and descriptions of the room\\u0027s features. The function also includes buttons to navigate to other screens related to the room\\u0027s equipment.\\n\\n`Habitacion`: A Composable function that displays a screen with information about a hospital room, including a background image, a main image, and descriptions of the room\\u0027s features, as well as buttons to navigate to other screens related to the room\\u0027s equipment.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Lavado.kt\&quot;:\&quot;This file contains a Composable function `Lavado` that displays a screen with a background image, a main image, and a video player, all loaded from Firebase Storage. It also includes a `VideoPlayer` Composable function that sets up an ExoPlayer to play the video.\\n\\n`Lavado`: A Composable function that displays a screen with a background image, a main image, and a video player, all loaded from Firebase Storage.\\n\\n`loadUrlFromFirebase`: A function that loads a URL from Firebase Storage and calls a callback with the URL or an error.\\n\\n`VideoPlayer`: A Composable function that sets up an ExoPlayer to play a video from a given URL.\&quot;,\&quot;/app/src/androidTest/java/com/example/mardeluna/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not define any classes or functions, but rather tests the context of the app under test.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the context of the app under test.\\n\\n`useAppContext()`: This function tests that the package name of the app under test is \\\&quot;com.example.mardeluna\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Plantas.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Plantas`: This function is a Composable function that displays a screen with the logos of the first and second floors, a background image, and buttons to navigate to the \\\&quot;primera_planta\\\&quot;, \\\&quot;segunda_planta\\\&quot;, and \\\&quot;publicaciones\\\&quot; screens, as well as a button to log out.\\n\\nThe file is responsible for fetching the necessary images from Firebase Storage and displaying them on the screen, along with handling the navigation and user interaction.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, including the project number, project ID, and storage bucket. The file also includes client information, such as the mobile SDK app ID and the Android client package name. Additionally, it includes an API key and information about the app invite service. Overall, this file is used to configure the Firebase project and its associated services.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Controles_carga.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`ControlesCarga`: This function is a Composable function that displays a screen with information about the control of the load in autoclaves, including the background image, title, description, and sections on the integrator and biological control.\\n\\nThe file appears to be a part of an Android application that uses Jetpack Compose to create the user interface. It loads a background image from Firebase Storage and displays information about the control of the load in autoclaves, including details about the integrator and biological control.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/MainActivity.kt\&quot;:\&quot;This file appears to be the main activity class for an Android application called \\\&quot;MarDeLuna\\\&quot;. It initializes the Firebase app and sets up the navigation for the application.\\n\\n`MainActivity`: This is the main activity class that initializes the Firebase app and sets up the navigation for the application.\\n\\n`Navegacion`: This function sets up the navigation for the application using the Jetpack Compose library.\&quot;,\&quot;/app/src/test/java/com/example/mardeluna/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that verifies the correctness of the addition operation.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test case to verify the correctness of the addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4, which is the expected result.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Control_enfermería.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ControlEnfermeria`: This function creates a Scaffold with a TopAppBar and a content area that displays information related to nursing control, including an image, buttons for navigating to other pages, and error handling for image loading.\\n\\nThe file also includes the following functions:\\n\\n`LaunchedEffect`: This function is used to load the background image and the image for the nursing control from Firebase Storage.\\n\\nThe file does not contain any classes. It is a Compose-based UI component that displays information related to nursing control and provides navigation to other pages within the application.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Uci.kt\&quot;:\&quot;This file contains a single Composable function called `Uci` that displays a screen with information about the Intensive Care Unit (ICU) of a hospital. The function loads images from Firebase Storage, displays a top app bar with a navigation icon, and presents information about the ICU, including visiting hours and a button to navigate to the Postoperative ICU and Medical ICU screens.\\n\\n`Uci`: A Composable function that displays a screen with information about the Intensive Care Unit (ICU) of a hospital.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_oxigeno.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`TomaOxigeno`: This function creates a screen that displays information and instructions for administering oxygen to a patient, including a background image and an image of the procedure, loaded from Firebase Storage.\\n\\nThe file also includes imports for various Compose and Firebase-related classes and functions, but does not define any additional classes.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Segunda_planta.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SegundaPlanta`: This function creates a screen that displays an image of the \\\&quot;Segunda Planta\\\&quot; (Second Floor) along with buttons for navigating to different sections of the hospital (Hospitalización, UCI, and Quirófano). The screen also includes a background image and allows the user to zoom, pan, and rotate the main image using touch gestures.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_endoscopias.kt\&quot;:\&quot;This file contains a Composable function `SalaEndoscopias` that displays the UI for the Endoscopy Room in a Mar de Luna application. It loads images from Firebase Storage, sets up the app bar, and displays the content of the endoscopy room, including an image and additional information about the room and the procedure. The file also contains two helper functions: `loadImageFromFirebase` and `NavigationButtons`.\\n\\n`SalaEndoscopias`: Displays the UI for the Endoscopy Room, including loading images from Firebase Storage and setting up the app bar.\\n\\n`loadImageFromFirebase`: Encapsulates the logic for loading an image from Firebase Storage.\\n\\n`Content`: Displays the main content of the Endoscopy Room, including the image and additional information.\\n\\n`NavigationButtons`: Displays the navigation buttons for the Endoscopy Room.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/RCP.kt\&quot;:\&quot;This file is a Composable function called `RCP` that displays a screen with information about Cardiopulmonary Resuscitation (RCP) in a Mar de Luna app. It fetches resources from Firebase Storage and displays them on the screen, including a background image, a basic RCP video, an RCP diagram, and an advanced RCP video.\\n\\n`RCP`: A Composable function that displays a screen with information about Cardiopulmonary Resuscitation (RCP) in a Mar de Luna app.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/ChequeoRespirador.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ChequeoRespirador`: This function displays a screen with a background image and a video from Firebase Storage, showing a \\\&quot;Chequeo respirador\\\&quot; (Respirator Check) screen.\\n\\nThe file does the following:\\n\\n1. Fetches the URLs for the background image and the video from Firebase Storage.\\n2. Displays the background image and the video (if the URLs are successfully fetched) on the screen.\\n3. Handles errors in case the URLs cannot be fetched.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography settings for a Compose-based Android application. It sets the default style for the `bodyLarge` text component, including the font family, weight, size, line height, and letter spacing.\\n\\n`Typography`: Defines the typography settings for the application, including the default style for the `bodyLarge` text component.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Empaquetado.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Empaquetado`: This function is a Composable function that displays a screen with a background image loaded from Firebase Storage and a scrollable column of text content explaining the different types of packaging for sterilized medical instruments and textiles.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Savina.kt\&quot;:\&quot;This file is a Kotlin Compose UI code that displays a screen with a background image and instructions for the \\\&quot;Savina 300\\\&quot; respirator. It uses Firebase Storage to fetch the background and instructions images, and handles the loading and error states.\\n\\n`Savina`: This is the main composable function that sets up the UI for the Savina screen, including the top app bar, background image, and instructions image.\\n\\n`LaunchedEffect`: This function is used to fetch the background and instructions image URLs from Firebase Storage and update the corresponding state variables.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the \\\&quot;Mar De Luna\\\&quot; Android app using Jetpack Compose. It includes the following:\\n\\n`DarkColorScheme`: A private color scheme for the dark theme.\\n\\n`LightColorScheme`: A private color scheme for the light theme.\\n\\n`MarDeLunaTheme`: A composable function that sets the app\\u0027s color scheme based on the system\\u0027s dark mode setting and the device\\u0027s Android version.\\n\\nThe file sets up the app\\u0027s color scheme and typography, allowing the app to adapt to the user\\u0027s system theme preferences.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Rea.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`Rea`: This function is a Composable function that displays a screen with a background image, an image of \\\&quot;REA\\\&quot;, and descriptive text about the REA (Recovery and Awakening Room) and the process of patient monitoring and transfer after a procedure.\\n\\nThe file appears to be a part of an Android application built using Jetpack Compose, a modern UI toolkit for Android. It loads images from Firebase Storage and displays them on the screen, along with relevant text information.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle Kotlin DSL script that configures the build settings for an Android application. It sets up the project\\u0027s namespace, compilation SDK version, minimum and target SDK versions, and other build-related properties. The script also specifies the dependencies required for the project, including core Android libraries, Compose UI components, Firebase services, media playback, and testing utilities.\\n\\nThe file does not contain any explicit class or function definitions. Instead, it uses the Gradle Kotlin DSL to configure the build settings and dependencies for the Android application.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Paguinas_Web.kt\&quot;:\&quot;This file contains a single Composable function called `PaginasWeb` that displays a screen with information about different web pages and links to access them. The function loads background and web page images from Firebase Storage, displays a tab bar with two options (\\\&quot;Información\\\&quot; and \\\&quot;Páginas Web\\\&quot;), and provides buttons to navigate to the various web pages mentioned.\\n\\n`PaginasWeb`: A Composable function that displays a screen with information about different web pages and links to access them.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_ingresos.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CarroIngresos`: This function creates a UI screen that displays a background image, an image of a \\\&quot;carro de ingresos\\\&quot; (a cart used for patient admissions in a hospital), and some text describing the purpose of the cart.\\n\\nThe file also includes code to download the background and cart images from Firebase Storage and handle any errors that may occur during the download process.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Aspiracion.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`Aspiracion`: This function creates a screen that displays information and instructions for the aspiration procedure, including a background image and an image of the aspiration process. It also includes a top app bar with a navigation icon to go back to the \\\&quot;Plantas\\\&quot; screen.\\n\\nThe file does not contain any classes, but it does use several Jetpack Compose components and Firebase Storage to load the background and aspiration images.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Hospitalizacion.kt\&quot;:\&quot;This file contains a single Composable function called `Hospitalizacion` that displays a screen with information about hospital rooms and related equipment.\\n\\n`Hospitalizacion`: This function sets up the UI for a screen that displays information about hospital rooms, including a background image, a title, an image of a hospital room, and buttons to navigate to other screens related to hospital equipment.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Equipo_quirofano.kt\&quot;:\&quot;This file contains a single Composable function and a helper Composable function:\\n\\n`EquipoQuirofano`: This function displays information about the different roles and responsibilities of the surgical team, including the Supervisor, Surgeon, Anesthetist, Circulating Nurse, Porters, and Recovery Nurse. It also loads a background image from Firebase Storage.\\n\\n`RoleSection`: This helper function displays the title and a list of points for a specific role within the surgical team.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it sets up the following plugins:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.google.gms.google.services) apply false`: Applies the Google Play Services plugin to the project.\\n\\nThe purpose of this file is to provide a centralized location for defining common configuration options that can be shared across all sub-projects or modules in the Android application.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Desfibrilador.kt\&quot;:\&quot;This file is a Kotlin Compose UI code that displays a screen with a background image, a video, and an image of a list of cardiac arrest carts. The file uses Firebase Storage to retrieve the URLs of the images and video, and then displays them in the UI.\\n\\n`Desfibrilador`: A Composable function that creates the UI for the Desfibrilador screen.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Endoscopios.kt\&quot;:\&quot;This file contains a Composable function `Endoscopios` that displays a screen with information about endoscopies, including a background image and a main image loaded from Firebase Storage. The file also includes a helper function `loadUrlFromFirebase` to load the images from Firebase Storage.\\n\\n`Endoscopios`: A Composable function that displays a screen with information about endoscopies, including a background image and a main image loaded from Firebase Storage.\\n\\n`Content`: A Composable function that displays the main content of the \\\&quot;Endoscopios\\\&quot; screen, including the title, the main image (if it\\u0027s loaded successfully), and a description of endoscopies.\\n\\n`loadUrlFromFirebase`: A helper function that loads a URL from Firebase Storage and calls a callback function with the URL or an exception if the loading fails.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of color values that are likely used in the UI theme of the \\\&quot;MarDeLuna\\\&quot; Android application. The colors defined in this file include:\\n\\n`Purple80`: A purple color with 80% opacity.\\n`PurpleGrey80`: A purple-grey color with 80% opacity.\\n`Pink80`: A pink color with 80% opacity.\\n`Purple40`: A purple color with 40% opacity.\\n`PurpleGrey40`: A purple-grey color with 40% opacity.\\n`Pink40`: A pink color with 40% opacity.\\n\\nThese color values can be used throughout the application\\u0027s UI to maintain a consistent visual theme.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_medica.kt\&quot;:\&quot;This file contains a single Composable function `UciMedica` that displays a screen with information about the Medical Intensive Care Unit (UCI) in the \\\&quot;Mar de Luna\\\&quot; application.\\n\\n`UciMedica`: This function sets up the UI for the UCI Medical screen, including downloading and displaying background images, images of the ICU room and admission criteria, and providing navigation buttons to other screens.\&quot;,\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_constantes.kt\&quot;:\&quot;This file is a Kotlin Compose UI code that displays a screen with a background image and a video player. It uses Firebase Storage to load the background image and the video. The file does not contain any classes, but it has the following functions:\\n\\n`TomaConstantes`: This function creates a Scaffold with a top app bar and a content area that displays the background image and the video player.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/carlo/AndroidStudioProjects/MardeLuna&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/mardeluna/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/mardeluna/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/controller/CredentialsManager.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/controller/CredentialsManager.kt\&quot;,\&quot;file_name\&quot;:\&quot;CredentialsManager.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/model/Navegacion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/model/Navegacion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Navegacion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Admin.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Admin.kt\&quot;,\&quot;file_name\&quot;:\&quot;Admin.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Aspiracion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Aspiracion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Aspiracion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_ingresos.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_ingresos.kt\&quot;,\&quot;file_name\&quot;:\&quot;Carro_ingresos.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_paradas.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Carro_paradas.kt\&quot;,\&quot;file_name\&quot;:\&quot;Carro_paradas.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/ChequeoRespirador.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/ChequeoRespirador.kt\&quot;,\&quot;file_name\&quot;:\&quot;ChequeoRespirador.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Control_enfermería.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Control_enfermería.kt\&quot;,\&quot;file_name\&quot;:\&quot;Control_enfermería.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Controles_carga.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Controles_carga.kt\&quot;,\&quot;file_name\&quot;:\&quot;Controles_carga.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Desfibrilador.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Desfibrilador.kt\&quot;,\&quot;file_name\&quot;:\&quot;Desfibrilador.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Empaquetado.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Empaquetado.kt\&quot;,\&quot;file_name\&quot;:\&quot;Empaquetado.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Endoscopios.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Endoscopios.kt\&quot;,\&quot;file_name\&quot;:\&quot;Endoscopios.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Equipo_quirofano.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Equipo_quirofano.kt\&quot;,\&quot;file_name\&quot;:\&quot;Equipo_quirofano.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Esterilizacion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Esterilizacion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Esterilizacion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Evita_600.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Evita_600.kt\&quot;,\&quot;file_name\&quot;:\&quot;Evita_600.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Habitación.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Habitación.kt\&quot;,\&quot;file_name\&quot;:\&quot;Habitación.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Historia.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Historia.kt\&quot;,\&quot;file_name\&quot;:\&quot;Historia.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Hoja_informativa_pacientes.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Hoja_informativa_pacientes.kt\&quot;,\&quot;file_name\&quot;:\&quot;Hoja_informativa_pacientes.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Hospital_de_dia.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Hospital_de_dia.kt\&quot;,\&quot;file_name\&quot;:\&quot;Hospital_de_dia.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Hospitalizacion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Hospitalizacion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Hospitalizacion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Iniciar_sesion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Iniciar_sesion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Iniciar_sesion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Lavado.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Lavado.kt\&quot;,\&quot;file_name\&quot;:\&quot;Lavado.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Paguinas_Web.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Paguinas_Web.kt\&quot;,\&quot;file_name\&quot;:\&quot;Paguinas_Web.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Plantas.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Plantas.kt\&quot;,\&quot;file_name\&quot;:\&quot;Plantas.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Primera_planta.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Primera_planta.kt\&quot;,\&quot;file_name\&quot;:\&quot;Primera_planta.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Procedimiento_ingresos.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Procedimiento_ingresos.kt\&quot;,\&quot;file_name\&quot;:\&quot;Procedimiento_ingresos.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Publicacion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Publicacion.kt\&quot;,\&quot;file_name\&quot;:\&quot;Publicacion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Quirofano.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Quirofano.kt\&quot;,\&quot;file_name\&quot;:\&quot;Quirofano.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/RCP.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/RCP.kt\&quot;,\&quot;file_name\&quot;:\&quot;RCP.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Rea.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Rea.kt\&quot;,\&quot;file_name\&quot;:\&quot;Rea.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Residuos_hospitalarios.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Residuos_hospitalarios.kt\&quot;,\&quot;file_name\&quot;:\&quot;Residuos_hospitalarios.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_endoscopias.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_endoscopias.kt\&quot;,\&quot;file_name\&quot;:\&quot;Sala_endoscopias.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_quirofano.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Sala_quirofano.kt\&quot;,\&quot;file_name\&quot;:\&quot;Sala_quirofano.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Savina.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Savina.kt\&quot;,\&quot;file_name\&quot;:\&quot;Savina.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Segunda_planta.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Segunda_planta.kt\&quot;,\&quot;file_name\&quot;:\&quot;Segunda_planta.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_constantes.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_constantes.kt\&quot;,\&quot;file_name\&quot;:\&quot;Toma_constantes.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_oxigeno.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Toma_oxigeno.kt\&quot;,\&quot;file_name\&quot;:\&quot;Toma_oxigeno.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Uci.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Uci.kt\&quot;,\&quot;file_name\&quot;:\&quot;Uci.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_medica.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_medica.kt\&quot;,\&quot;file_name\&quot;:\&quot;Uci_medica.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_postquirurgica.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/mardeluna/view/Uci_postquirurgica.kt\&quot;,\&quot;file_name\&quot;:\&quot;Uci_postquirurgica.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/mardeluna/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/mardeluna/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>